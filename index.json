[{"categories":null,"content":"About Hi! I am a software developer weaving payment and settlement solutions at Juspay! Currently, I’m broadening my horizons around system design and software architecture. With love for all things tech, I thrive on the thrill of creating innovative solutions that make a positive impact. Nowadays, I’m mostly diving deep into Docker and Virtualization, also taught myself Go on the go (LOL). I also have an interest in Git and the art of version control. It’s like a magical spell that keeps projects in harmony. Beyond coding, I’m an avid learner, constantly exploring new technologies and trends. This curiosity fuels my passion for growth and enables me to continually expand my skills! When I’m not programming, I’m up for a mind-bending chess match. Challenge me on chess.com here if you dare! Video games like Valorant, Assassin’s Creed, and Dishonoured are my go-to virtual adventures :)  Experiences Product Engineer - 1 at Juspay [2022-Present] - Developing new payment and settlement solutions! Product Engineer Intern at Juspay [2021-2022] - Worked with the Settlement and Reconciliation Team. GSoC Mentor with Python Software Foundation [2021] — Guided new developers in Intel’s Auto-ML project - DFFML. Google Summer of Code with Python Software Foundation [2020] — Worked as a Student Developer in Intel’s Auto-ML project - DFFML. Mentor in GirlScript Summer of Code [2021] - Simulate, where I mentored student developers in implementing mathematical visualizations and simulations in Flutter. RESUME  Get in Touch with me! Linkedin Email ","date":"2021-01-21","objectID":"/about/:0:0","tags":null,"title":"","uri":"/about/"},{"categories":null,"content":"My GSoC 2020 Journey","date":"2020-09-01","objectID":"/2020/09/mygsocjourneyandtips/","tags":null,"title":"My GSoC 2020 Journey","uri":"/2020/09/mygsocjourneyandtips/"},{"categories":null,"content":" I have been a student developer under Python Software Foundation for the last 4 months as a part of Google Summer of Code program and have successfully completed the program on 31st August 2020, the last day for this year’s program! So, for the unacquainted — What is Google Summer of Code (GSoC)? Well, It is an annual program in which university students all around the globe contribute to open source during their break from school in the summer(starting from April/May and ending in August). The program consists of organizations which register themselves in the program around February with the projects that are going to take part in the program. The interested students start discussing project ideas with the organizations and apply to these projects with their proposals for those project ideas, the accepted students then start to code throughout the summer. The program is incentivized by Google by offering a stipend to the accepted students.  So, what’s my background story? I was finishing my 2nd semester studying Information Technology at Maharaja Agrasen Institute of Technology, Delhi, India when I got to know that there is a program called GSoC where students are given an opportunity to contribute to open source software from my friend who was taking part in GSoC’19. I saw how much he has learnt and grown as a programmer during and after the program. At the time, I only wrote code in C++ and had no prior knowledge of python or any other language. So I started learning python and after a few weeks was introduced to the world of Machine Learning. That’s when I started contributing to open source. I looked for organizations and projects that caught my interest and started contributing. For the most part, I was contributing because I was getting to learn a lot of cool new stuff! In March 2020, I submitted my proposal and on 4th May, was accepted as a student for the summer.  4th May 2020 - The day I got accepted!!  A summary of my project - Integrating Image Processing into DFFML  DFFML is a machine learning based project which provides APIs for training and testing datasets using various machine learning frameworks such as scikit-learn, etc; making it easier for anyone to input their datasets to train and test upon no matter the knowledge of the user in programming. The project, Integrating Image Processing into DFFML aimed to add various functionalities to DFFML for properly performing image processing tasks such as image classification that would make it easy for anyone to do when using DFFML and get their desired results in a clean and user-friendly way. Before this project, there was no definite and fast way of training and testing the machine learning models in DFFML on visual data. Most of the machine learning algorithms are very likely to fit very closely to the training data, especially when there isn’t enough data to train on. Part of the problem is that visual data is very complex, therefore models tend to have higher dimensions of input and therefore a lot of parameters to fit. And hence, there was a need of a less time-consuming and an accurate way of performing image processing tasks via DFFML. The project is divided into 2 main parts: Adding ways to read image datasets and perform pre-processing operations on them. Adding state-of-the-art and accurate machine learning models to perform various image processing tasks such as image classification, object detection, etc. To read the detailed final report of what I did this summer - Final Report For a detailed weekly description, check out my weekly blogs - https://blogs.python-gsoc.org/en/sakshamaroras-blog/  How can someone get selected in this program? A lot of the students get confused on how this program works and here I will try to clear some of the main obstacles students face while getting started with open source and GSoC in the simplest way possible.  ","date":"2020-09-01","objectID":"/2020/09/mygsocjourneyandtips/:0:0","tags":null,"title":"My GSoC 2020 Journey","uri":"/2020/09/mygsocjourneyandtips/"},{"categories":null,"content":"1. How to start contributing in open source? To get started with contributing to open source projects, learn how to use version control systems like Git/GitHub understand how these systems work. This can be done easily by reading up on one of the many detailed articles on internet, online resources(MOOCs, etc) or watching YouTube videos.  ","date":"2020-09-01","objectID":"/2020/09/mygsocjourneyandtips/:1:0","tags":null,"title":"My GSoC 2020 Journey","uri":"/2020/09/mygsocjourneyandtips/"},{"categories":null,"content":"2. How to prepare for GSoC? Which organization/project to select? Preparation: There is no definite/proven way of preparing for the program that will make sure that one will always get accepted. It depends on the skills you possess for that specific organization/project you are applying to. Organization/Project: To choose a project to contribute to, you can visit the site — https://summerofcode.withgoogle.com/organizations/ , search and filter out by projects/languages you’re interested in. Read their guidelines and look for good first issues to get started and build your confidence! Yes, it’s that simple! (I know it seems intimidating at first, it did to me too, but taking the first step is always the hardest). then you can move to bigger issues and establish yourself as a hard-working individual. Don’t hesitate to ask your doubts to the project admins.  ","date":"2020-09-01","objectID":"/2020/09/mygsocjourneyandtips/:2:0","tags":null,"title":"My GSoC 2020 Journey","uri":"/2020/09/mygsocjourneyandtips/"},{"categories":null,"content":"3. Do I need to be an exceptional developer/programmer to participate in GSoC? Not necessarily. Having a basic understanding of the concepts of programming and stuff related to the project you’re interested in contributing to along with having enthusiasm and a craving to learn and explore are some of the things you should have! At last, I’d say that consistency is the main key! I believe that “putting in the hard work” is the only thing between you and your goals! You’ll have a lot of distractions in your journey but always remember that Consistency always leads to excellence.  If anyone else who has participated in GSoC is reading this article feels I’ve missed something important, let me know and I’ll make sure to add it to this article.  Thank you for reading! ","date":"2020-09-01","objectID":"/2020/09/mygsocjourneyandtips/:3:0","tags":null,"title":"My GSoC 2020 Journey","uri":"/2020/09/mygsocjourneyandtips/"},{"categories":null,"content":"GSoC 2020 in PSF - Final Report by Saksham Arora","date":"2020-08-31","objectID":"/2020/08/gsocfinalreport/","tags":null,"title":"GSoC Final Report","uri":"/2020/08/gsocfinalreport/"},{"categories":null,"content":" Google Summer of Code 2020 Final Work Submission Report Name: Saksham Arora Organisation: Python Software Foundation Sub-Organisation: DFFML - DataFlow Facilitator for Machine Learning Project: Integrating Image Processing into DFFML Proposal: https://blogs.python-gsoc.org/media/proposals/GSoC_2020_Proposal_DFFML_-_PSF.pdf ","date":"2020-08-31","objectID":"/2020/08/gsocfinalreport/:0:0","tags":null,"title":"GSoC Final Report","uri":"/2020/08/gsocfinalreport/"},{"categories":null,"content":"Aim Add ways of training and testing machine learning models in DFFML on image datasets and perform image processing and computer vision tasks via DFFML. The project is divided into 2 parts: Wrapping the image processing libraries namely OpenCV and Scikit-Image. High Level Operation Workflow, i.e., Custom Operations which will act as high level operations implementing a predefined flow of OpenCV and Scikit-Image functions. ","date":"2020-08-31","objectID":"/2020/08/gsocfinalreport/:1:0","tags":null,"title":"GSoC Final Report","uri":"/2020/08/gsocfinalreport/"},{"categories":null,"content":"Modifications to the proposal and scope of the project During the summer, the proposed work was modified to achieve better results. The finalized work done in the project: Wrapping important image pre-processing functions as DFFML operations. PyTorch based pre-trained Convolutional Networks for image classification. Custom Neural Networks for image pre-processing and classification tasks via DFFML. ","date":"2020-08-31","objectID":"/2020/08/gsocfinalreport/:2:0","tags":null,"title":"GSoC Final Report","uri":"/2020/08/gsocfinalreport/"},{"categories":null,"content":"Executive Summary The project, Integrating Image Processing into DFFML aimed to add various functionalities to DFFML for properly performing image processing tasks such as image classification that would make it easy for anyone to do when using DFFML and get their desired results in a clean and user-friendly way. DFFML is a machine learning based project which provides APIs for training and testing datasets using various machine learning frameworks such as scikit-learn, etc; making it easier for anyone to input their datasets to train and test upon no matter the knowledge of the user in programming. Before this project, there was no definite and fast way of training and testing the machine learning models in DFFML on visual data. Most of the machine learning algorithms are very likely to fit very closely to the training data, especially when there isn’t enough data to train on. Part of the problem is that visual data is very complex, therefore models tend to have higher dimensions of input and therefore a lot of parameters to fit. And hence, there was a need of a less time-consuming and an accurate way of performing image processing tasks via DFFML. The project is divided into 2 main parts: Adding ways to read image datasets and perform pre-processing operations on them. Adding state-of-the-art and accurate machine learning models to perform various image processing tasks such as image classification, object detection, etc. The first part of the project takes care of handling image dataset and providing the user with a functionality to load images from one of the most popular formats for storing images, that is, the directory format. Before the images are feeded into a model which performs image processing tasks the user wants to implement, the images need to pre-processed to which enhances important features in them and suppresses unuseful features due to the high dimensionality of images. This is where feature extraction techniques come into the picture, to extract important features required for a specific task and disregard any unwilling features that may decrease the accuracy of the model. The second part takes care of adding different models that are made to perform tasks specifically a user wants to perform and get the best results and accuracy when the models are trained and tested. The addition of important and popular deep learning architectures makes it suitable for performing better than other machine learning models in difficult tasks depending upon the tasks. The user can use powerful pre-trained models to perform image processing tasks saving a lot of time. The user even has the option to create their own custom neural networks to perform different tasks, giving DFFML a versatility in the vision field while not at the cost of the user getting caught up in all the complexities that comes with advanced tasks. DFFML takes care of that for the user which is what DFFML strives to achieve: Ease of performing machine learning tasks. Through this project, DFFML has vastly grown in the field of computer vision and image processing, which makes it have a potential for solving real-world computer vision and image processing problems and applications while it keeps growing in the future. ","date":"2020-08-31","objectID":"/2020/08/gsocfinalreport/:3:0","tags":null,"title":"GSoC Final Report","uri":"/2020/08/gsocfinalreport/"},{"categories":null,"content":"Project Tasks Completed Sources for reading and pre-processing of image datasets To enable working with image datasets and pre-process these datasets, the Directory source and DataFlow pre-processing source were added. The Directory source is used to read images stored in a directory format and DataFlow pre-processing source is used to modify the data using DFFML operations and creating a flow of operations to run the data through. The edit command uses DataFlow pre-processing Source to modify records using operations and provides an option to overwrite modified records on old records. Related Links: https://github.com/intel/dffml/pull/604 DataFlow pre-processing Source https://github.com/intel/dffml/pull/824 Doctestable Example for DataFlow pre-processing Source https://github.com/intel/dffml/pull/644 Edit command to edit records present in a source https://intel.github.io/dffml/master/cli.html#all https://github.com/intel/dffml/pull/718 Directory Source Image Processing Operations Added DFFML operations that wrap functions from OpenCV for pre-processing images after reading the image dataset from the source provided. The operations are put in a flow through which the image data runs by and is pre-processed before they are feeded to a machine learning model in DFFML for performing various tasks such as image classification! Related Links: https://github.com/intel/dffml/pull/709 Added OpenCV functions as DFFML operations PyPi: https://pypi.org/project/dffml-operations-image/ https://github.com/intel/dffml/pull/731 Added more pre-processing functions and support for default values in operations Convolutional Neural Networks Visual data being very complex and containing high dimensions of features of same type in different orientation can be very hard to classify using classification models such as RandomForestClassifier, KNearestNeighbours, etc. This is where powerful deep learning models come into the picture. Deep learning networks like Convolutional Neural Networks offer great accuracy and versatility for tasks such as image classification, object detections, etc. By adding Convolutional Neural Networks to DFFML, it becomes very easy to perform image processing techniques and get great results by using Transfer Learning or creating custom networks. Related Links: https://github.com/intel/dffml/pull/784 Transfer learning PyTorch based models with dynamic loading for image classification \u0026 add documentations and tests for the same PyPi: https://pypi.org/project/dffml-model-pytorch/ https://github.com/intel/dffml/pull/777 Added example usages for classifying flower species using OpenCV and Transfer Learning approach and added tests for the examples https://github.com/intel/dffml/pull/839 Custom Neural Networks, custom layer addition support, loss entrypoint classes along with their example usage and tests Many other important features that aided the addition and proper functioning of image processing tasks in DFFML are listed below: Related Links: https://github.com/intel/dffml/pull/708 Improve String Representation for better viewing of image records https://github.com/intel/dffml/pull/768 Added support for loading images from fle formats namely JPEG, PNG and TIFF PyPi: https://pypi.org/project/dffml-config-image/ https://github.com/intel/dffml/pull/771 Add ability to add operations while creating a dataflow with different names so as to use same operations for different tasks in a single dataflow https://github.com/intel/dffml/pull/838 Ability to load YAML/JSON file formats as dictionaries via DFFML CLI Detailed weekly description of tasks and work done can be found in: Weekly Blogs: https://blogs.python-gsoc.org/en/sakshamaroras-blog/ Weekly Sync: https://docs.google.com/document/d/16u9Tev3O0CcUDe2nfikHmrO3Xnd4ASJ45myFgQLpvzM/edit DFFML YouTube Channel: https://www.youtube.com/channel/UCorEDRWGikwBH3dsJdDK1qA ","date":"2020-08-31","objectID":"/2020/08/gsocfinalreport/:4:0","tags":null,"title":"GSoC Final Report","uri":"/2020/08/gsocfinalreport/"},{"categories":null,"content":"Future Work DFFML is a machine learning based project which aligns with my interest in the field, so I will be more than happy to stay a part of the community to keep contributing and learning! Goals for future contributions: Adding more image processing techniques. Adding image processing examples via DFFML’s PyTorch model plugin such as image colorization. Connecting Transfer Learning models with custom Neural Networks to use powerful architectures for different Computer Vision tasks. Contribute to DFFML’s Web UI. This summer was a truly an amazing journey and surely an unforgettable one! I would like to thank my mentors John Andersen for guiding me and being a very patient \u0026 supportive mentor, Yash Lamba for being supportive \u0026 understanding and Sudharsana for being helpful throughout my journey. Their guidance and support is the reason why this project was successful. I have learnt a ton of important things from them. I’d also like to thank my fellow GSoC studentsHimanshu Tripathi and Aghin Shah Alin for helping me during the summer. Thank you to Google and Python Software Foundation for providing this opportunity! ","date":"2020-08-31","objectID":"/2020/08/gsocfinalreport/:5:0","tags":null,"title":"GSoC Final Report","uri":"/2020/08/gsocfinalreport/"},{"categories":null,"content":"Work in Progress! I have created this website using the hugo static website generator https://gohugo.io/ and is still a work in progress! : D I am currently using the LoveIt theme https://themes.gohugo.io/loveit/ by Dillon I will be documenting my GSoC'2020 journey and adding descriptions about my projects in the coming weeks! I have also been posting GSoC related blogs on https://blogs.python-gsoc.org/en/sakshamaroras-blog, you can check them out! ","date":"2020-05-14","objectID":"/2020/05/firstblog/:0:0","tags":null,"title":"First blog","uri":"/2020/05/firstblog/"}]